// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// users , doctor , appointment
model User {
  id           String        @id @default(cuid())
  clerkId      String        @unique
  name         String?
  email        String        @unique
  firstName    String?
  lastName     String?
  phone        String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]

  @@map("users")
}

model Doctor {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  phone        String?
  specialty    String?
  bio          String?
  imgUrl       String?
  gender       Gender
  isActive     Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]

  @@map("doctors")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Appointment {
  id       String            @id @default(cuid())
  date     String            @unique
  time     String            @unique
  duration Int               @default(30) // duration in minutes
  status   AppointmentStatus @default(SCHEDULED) // scheduled, completed, cancelled
  notes    String?
  reason   String?

  // foreign keys
  userId   String
  doctorId String

  //relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("appointments")
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
}
